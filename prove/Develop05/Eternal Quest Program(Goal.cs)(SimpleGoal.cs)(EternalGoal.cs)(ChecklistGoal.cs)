public abstract class Goal
{
    public string _shortName { get; protected set; }
    public string _description { get; protected set; }
    public int _points { get; protected set; }

    public Goal(string shortName, string description, int points)
    {
        _shortName = shortName;
        _description = description;
        _points = points;
    }

    public abstract void RecordEvent();
    public abstract bool IsComplete();
    public virtual string GetDetailsString()
    {
        return $"[{(_points > 0 ? " " : "X")}] {_shortName}: {_description}";
    }
    public abstract string GetStringRepresentation();
}
--------------------------------------------------------------------------------------
    public class SimpleGoal : Goal
{
    public bool _isComplete { get; private set; }

    public SimpleGoal(string shortName, string description, int points)
        : base(shortName, description, points)
    {
        _isComplete = false;
    }

    public override void RecordEvent()
    {
        _isComplete = true;
    }

    public override bool IsComplete()
    {
        return _isComplete;
    }

    public override string GetStringRepresentation()
    {
        return $"SimpleGoal:{_shortName}:{_description}:{_points}:{_isComplete}";
    }
}
-----------------------------------------------------------------------------------------------
public class EternalGoal : Goal
{
    public EternalGoal(string shortName, string description, int points)
        : base(shortName, description, points)
    {
        // No additional attributes needed for EternalGoal
    }

    public override void RecordEvent()
    {
        // Eternal goals are never marked as complete
    }

    public override bool IsComplete()
    {
        return false; // Eternal goals are never complete
    }

    public override string GetStringRepresentation()
    {
        return $"EternalGoal:{_shortName}:{_description}:{_points}";
    }
}
---------------------------------------------------------------------------------------------
public class ChecklistGoal : Goal
{
    private int _amountCompleted;
    private int _target;
    private int _bonus;

    public ChecklistGoal(string shortName, string description, int points, int target, int bonus)
        : base(shortName, description, points)
    {
        _amountCompleted = 0;
        _target = target;
        _bonus = bonus;
    }

    public override void RecordEvent()
    {
        _amountCompleted++;
    }

    public override bool IsComplete()
    {
        return _amountCompleted >= _target;
    }

    public override string GetDetailsString()
    {
        return $"[{_amountCompleted}/{_target}] {_shortName}: {_description}";
    }

    public override string GetStringRepresentation()
    {
        return $"ChecklistGoal:{_shortName}:{_description}:{_points}:{_amountCompleted}:{_target}:{_bonus}";
    }
}
